var counter = 0;
var storage = new Array();

var data = ",,,,,,,,,,,,,,,IS_ACTIVE_FLAG,CAN_CHANGE_PWD_FLAG,CAN_CHANGE_PWD_FLAG,,CAN_RECEIVE_TRANSFERS,,CAN_MAKE_RECORDINGS_FLAG,CAN_SEND_MESSAGES_FLAG,CAN_CREATE_CHAT_FLAG,TRAINING_MODE_FLAG,CAN_VIEW_USERS_DATA,CAN_VIEW_AGENTS_DATA,CAN_VIEW_STATIONS_DATA,CAN_VIEW_INTERNAL_MESSAGES_DATA,CAN_VIEW_CAMPAIGNS_DATA,CAN_ACCESS_DASHBOARD,CAN_SILENT_MONITOR,,CANNOT_REMOVE_CRM_DATA_FLAG,VM2EMAIL_NOTIFICATION_FLAG,VM2EMAIL_ATTACHMENT_FLAG,CAN_START_STOP_RESET_CAMPAIGNS,CAN_RECV_VMAIL_FLAG,,CAN_USE_CALL_FORWARDING_FLAG,CANNOT_EDIT_CRM_SESSIONS_FLAG,CAN_TRANSFER_VOICEMAIL_FLAG,CAN_DELETE_VOICEMAIL_SESSION_FLAG,CANNOT_ADD_DNC_FLAG,CAN_CALL_DNC_FLAG,CANNOT_CREATE_CALLBACKS_FLAG,AGENT_AUTO_RECORD,CANNOT_PLAY_AUDIO_FILES,SUP_CANNOT_VIEW_DATA_FOR_ALL_SKILLS,CANNOT_WRAP_UP_CALL,CANNOT_PLACE_CALL_ON_HOLD,CANNOT_PARK_CALL,CAN_SKIP_NUMBERS_IN_PREVIEW_MODE,AGENT_CAN_MANAGE_SKILL_AVAILABILITY,CANNOT_VIEW_BILLING_INFO,CAN_SURF_THE_WEB,CAN_BARGE_IN_MONITOR,CAN_WHISPER_MONITOR,CAN_CHANGE_PREVIEW_PREF,CAN_ACCESS_ALL_CONTACT_RECORDS,CAN_VIEW_AGENT_GROUPS_DATA ,CAN_REVIEW_VOICE_RECORDINGS,CAN_EDIT_AGENT_SKILLS,VM2EMAIL_EMBED_CRM_FLAG,ADMIN_FLAG_FULL_PERMISSIONS,ADMIN_FLAG_CAN_MANAGE_USERS,ADMIN_FLAG_CAN_MANAGE_SKILLS,ADMIN_FLAG_CAN_MANAGE_AGENT_GROUPS,ADMIN_FLAG_CAN_MANAGE_CAMPAIGNS_START_STOP,ADMIN_FLAG_CAN_MANAGE_CAMPAIGNS_RESET_DISP,ADMIN_FLAG_CAN_MANAGE_CAMPAIGNS_RESET_LIST,ADMIN_FLAG_CAN_MANAGE_CAMPAIGNS_RESET_CAMPAIGNS,ADMIN_FLAG_CAN_MANAGE_CAMPAIGNS_PROPERTIES,ADMIN_FLAG_CAN_MANAGE_LISTS,ADMIN_FLAG_CAN_MANAGE_CRM,ADMIN_FLAG_CAN_MANAGE_DNC,ADMIN_FLAG_CAN_EDIT_IVR,ADMIN_FLAG_CAN_EDIT_PROFILES,ADMIN_FLAG_CAN_EDIT_CONNECTORS,ADMIN_FLAG_CAN_EDIT_DISPOSITIONS,ADMIN_FLAG_CAN_EDIT_PROMPTS,ADMIN_FLAG_CAN_EDIT_REASON_CODES,ADMIN_FLAG_CAN_EDIT_WORKFLOW_RULES,ADMIN_FLAG_CAN_EDIT_AGENT_SCRIPTS,ADMIN_FLAG_CAN_ACCESS_CONFIG_ANI,ADMIN_FLAG_CAN_EDIT_CAVS,ADMIN_FLAG_CAN_ACCESS_IP_RANGE,ADMIN_FLAG_CAN_ACCESS_RECORDING_COLUMN,ADMIN_FLAG_CAN_MANAGE_CAMPAIGNS_EMAIL_NOTIFICATIONS,ADMIN_FLAG_CAN_MANAGE_DOMAIN_EMAIL_NOTIFICATIONS,CAN_REJECT_CALLS,CAN_CONFIGURE_AUTO_ANSWER,CAN_TRANSFER_TO_AGENTS,CAN_TRANSFER_TO_SKILLS,CAN_CREATE_CONFERENCE_WITH_AGENTS,CAN_CREATE_CONFERENCE_WITH_SKILLS,CAN_SELECT_SYS_RECYCLE_DISPOSITION,CAN_TRANSFER_TO_CAMPAIGNS,CAN_TRANSFER_TO_EXTERNAL,CAN_CREATE_CONFERENCE_WITH_CAMPAIGNS,CAN_CREATE_CONFERENCE_WITH_EXTERNAL,CAN_MAKE_CALLS_TO_SKILLS,CAN_MAKE_CALLS_TO_AGENTS,CAN_MAKE_CALLS_TO_EXTERNAL,CAN_MAKE_CALLS_TO_SPEED_DIALS,CAN_TRANSFER_TO_SPEED_DIALS,CAN_CREATE_CONFERENCE_WITH_SPEED_DIALS,WARM_STATE_TRANSFER_NO_MANUAL_CALLS,WARM_STATE_TRANSFER_NO_MANUAL_ANSWER_CALL_MODE,WARM_STATE_TRANSFER_NO_INBOUND_CAMPAIGN_CALL,WARM_STATE_TRANSFER_NO_READY_STATE_CHANGE_AFTER_CALL,,,,,,,,,,CANNOT_DELIVERY_REPORTS_VIA_FTP,CAN_VIEW_STANDARD_REPORTS,CAN_VIEW_CUSTOM_REPORTS ,CAN_VIEW_SCHEDULED_REPORTS,CAN_VIEW_RECENT_REPORTS,CAN_VIEW_RELEASE7_REPORTS,CAN_VIEW_CANNED_REPORTS,CANNOT_CHANGE_DATA_FIELDS,CAN_VIEW_STANDART_REPORTS,CAN_EDIT_DASHBOARD,CAN_ACCESS_DESIGNER,CAN_VIEW_CUSTOMER_SHARED_REPORTS,CAN_SAVE_CUSTOMER_SHARED_REPORTS,CAN_DOWNLOAD,ENABLE_SELF_SCHEDULE,CAN_USE_SALESFORCE_EMAILS,CAN_USE_LIVE_PERSON_CHATS,CAN_PICK_SALESFORCE_OBJECT_FOR_CALL_LOG,CAN_START_CAMPAIGNS,CAN_STOP_CAMPAIGNS,CAN_RESET_CAMPAIGNS,CAN_RESET_DISPOSITIONS,CAN_RESET_LIST_POSITION,CAN_RESET_ABANDON_CALL_RATE,CAN_ACCESS_BILLING_TAB,CAN_VIEW_TEXT_DATA,CAN_VIEW_DASHBOARDS,CAN_VIEW_ALL_SKILLS,CAN_VIEW_ALL_GROUPS,CAN_RUN_JAVA_CLIENT,CAN_RUN_WEB_CLIENT,WEB_CLIENT_PSEUDO_FLAG,USER_ACCESS_IS_IN_VDI_MODE,CAN_VIEW_SOCIAL_REPORTS,CAN_CHANGE_DISPLAY_LANGUAGE,CAN_VIEW_MISSED_CALLS,CAN_VIEW_WEB_ANALYTICS,CAN_TRANSFER_CHATS_TO_AGENTS,CAN_TRANSFER_CHATS_TO_SKILLS,CAN_TRANSFER_EMAILS_TO_AGENTS,CAN_TRANSFER_EMAILS_TO_SKILLS,CAN_CREATE_CHAT_CONFERENCE_WITH_AGENTS,CAN_CREATE_CHAT_CONFERENCE_WITH_SKILLS,CAN_TRANSFER_SOCIALS_TO_AGENTS,CAN_TRANSFER_SOCIALS_TO_SKILLS,CAN_RUN_JAVA_SUPERVISOR,CAN_RUN_WEB_SUPERVISOR,WEB_SUPERVISOR_PSEUDO_FLAG,VERINT_ENABLE_SCREEN_RECORDING,CAN_RECEIVE_NOTIFICATIONS_ABOUT_SUPERVISOR_MONITORING,CAN_DOWNLOAD_EMAILS_TO_FILE,CAN_CHANGE_DISPLAY_LANGUAGE_IN_SUPERVISOR ,SEND_TO_VERINT,CAN_MONITOR_IDLE_AGENTS,,,,,CAN_MANAGE_COMPLIANCE_DATA ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"

//sample 1: '0000000000000001000101110111111101000101110100000000000111001110100000000000000000000001000011111111111111100000000000000111101000000000000000000000010000110111111111010000001001000000001010000100000000000000000000000000000000000000000000000000000000000000'
//sample 2:  0000000000000001000101110111111101000101110100000001000111001110100000000000000000000001000011111111111111100000000000000111101000000000000000000000010000010111111111010000000001000000001010000100000000000000000000000000000000000000000000000000000000000000

document.getElementById('main_element').addEventListener('keydown', function (event) {
    if (event.type === 'keydown' && event.key === 'Enter') {

        if(event.target.value.match(/^[01]{256,256}$/) == null){
            alert("Invalid input!\nFlag has to be 256 character length binary value.");
            return;
        }

        viewResults(true)
        viewRes(event.target.value);
        recordCount();
        clearInput();

        if (counter > 1) {
            document.getElementById('indicatorTitle').innerHTML = 'These are the flags that were changed compared to the last input flags:';
            clearView();
            compareFlags();
        }

    }
});




function viewResults(flag) {
    flag == true ?
        document.getElementById('resultContainer').style.opacity = '100%' :
        document.getElementById('resultContainer').style.opacity = '0%'
}

function clearView() {
    document.getElementById('textShow').innerHTML = "";
}

function clearInput(){
    document.getElementById('main_element').value = "";
}

function viewRes(val) {
    clearView();
    decipherFlags(val).map((d, i) => document.getElementById('textShow').innerHTML += `<li id="${i}">${d.replace(/_/g, ' ')}</li>`);
    console.log('done')
}

function decipherFlags(flags) {
    var res = flags.split('').map((x, i) => x == 1 && data.split(',')[i]).filter(x => x);
    console.log(res);
    return res;
}

function recordCount() {
    counter = counter + 1;
    storage.push(document.getElementById('main_element').value)
    console.log(counter);
    console.log(storage);
}

function compareFlags(){
    console.log('Old Flag: '+storage[storage.length - 2]);
    console.log('New Flag: '+storage[storage.length - 1]);

    var OGFLAGS = storage[storage.length - 2];
    var NFLAGS = storage[storage.length - 1];

    

    return OGFLAGS.split('').map((d,i) => NFLAGS.split('')[i] != d && data.split(",")[i]).filter(x => x).
    map((d,i) => document.getElementById('textShow').innerHTML += `<li id="${i}">${d.replace(/_/g, ' ')}</li>`);
}
